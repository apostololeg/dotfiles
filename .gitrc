# misspell's
alias qgit="git"

# common
alias gconf="vi .git/config"

# base
alias gb="git b"
alias gco="git co"
alias st="git st"
alias df="git diff"
alias pl="git pull"
alias sh="git show"
alias shf="git show --name-only"
alias gh="git hist"
alias camend="git commit -a --amend"
alias chp="git cherry-pick"
alias remote="git remote -v"
alias gpop="git reset HEAD^"

gc() {
    git ci -m $1
}

# git log
gl() {
    local params;
    [ -z $1 ] && params="" || params="-"$1;

    git log $params;
}

# git push
ph() {
    local remote;
    [ -z $1 ] && remote=origin || remote=$1;

    git push $remote;
}

alias pushforce="ph --force"
alias pushf="pushforce"
alias pf="pushforce"
alias pt="ph --tags"

# change origin of git repo
chor() {
    git remote rm origin
    git remote add origin $1
}

# ребейзим последний N коммитов
gr() {
    git rebase -i HEAD~$1
}

# ребейзим все коммиты текущей ветки по базовой ветке (dev)
# [Git Branch Rebase]
gbr() {
    local base;
    local current;

    [ -z $1 ] && base=$1 || base=dev;
    [ -z $2 ] && current=$2 || current=HEAD;

    git rebase -i `git merge-base $base $current`
}

# конфиг по умолчанию для новой ветки
# @param1 – base branch / [master] | dev | v1 | ...
# @param2 - remote
# [Git Branch Config]
gbc() {
    GIT_current_branch=`git rev-parse --abbrev-ref HEAD`;

    GIT_base_branch=master;
    [ -z $1 ] || GIT_base_branch=$1;

    GIT_remote=origin;
    [ -z $2 ] || GIT_remote=$2;

    # rebase = true
    git config branch.$GIT_current_branch.rebase true
    # remote = origin
    git config branch.$GIT_current_branch.remote $GIT_remote
    # merge = refs/heads/master
    git config branch.$GIT_current_branch.merge refs/heads/$GIT_base_branch
}

# тянем пуллреквест в ветку pr-<номер>
getpr() {
    TPR_branch=pr-$1;
    git fetch origin refs/pull/$1/head:$TPR_branch
    git co $TPR_branch;
}

# узнаём дату коммита
# [CommIt DATE]
cidate() {
    # указанный или последний коммит
    STATE=$1 || HEAD;
    git show $STATE | grep Date | awk -F':   ' '{print $2}'
}
